C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE C_INTERFACING
OBJECT MODULE PLACED IN .\Objects\C INTERFACING.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE C INTERFACING.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\C INTERFACING.lst) TABS(2) OBJECT(.\Objects\C INTERFACING.obj)

line level    source

   1          #include<reg51.h>
   2          #define COL P2
   3          #define ROW P0
   4          #define display P1
   5          
   6          void delay(unsigned int value);
   7          void conv1();
   8          void conv2();
   9          void add();
  10          void anticonv();
  11          void subb();
  12          void mul();
  13          void div();
  14          void perform();
  15          void command_set();
  16          void two_digit();
  17          void two_digit1();
  18          sbit En =P3^2;
  19          sbit Rs =P3^0;
  20          sbit Rw =P3^1;
  21          
  22          unsigned char y=0;
  23          unsigned char x=0;
  24          unsigned char result=0; 
  25          unsigned char acc=0;
  26          unsigned char sign=0;
  27          unsigned char count=0;
  28          unsigned char p;
  29          unsigned char q;
  30          unsigned char z=0;
  31          unsigned char b=0;
  32          unsigned char c=0;
  33          void command()
  34          {
  35   1      
  36   1           Rs=0;     // Since we give command we have to make RS=0
  37   1           Rw = 0;  // since we write the data on lcd we have to make R/W pin 0
  38   1           En = 1; // to take new character
  39   1           En = 0;
  40   1      delay(1);
  41   1      }
  42          
  43          unsigned char calculator[4][4] = {'7','8','9','/',
  44                                            '4','5','6','*',
  45                                            '1','2','3','-',
  46                                            'c','0','=','+'};
  47          
  48            
  49          void DISPLAY()
  50          {
  51   1      
  52   1               Rs=1;      // As we send data make RS=1
  53   1               Rw=0;     //  since we write the data on lcd we have to make R/W pin 0
  54   1               En = 1;
C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 2   

  55   1               En = 0;
  56   1               delay(1);
  57   1      
  58   1      } 
  59                                      
  60          void main()
  61          {
  62   1        unsigned char col,row;
  63   1        
  64   1          
  65   1        command_set();
  66   1        
  67   1        while(1)
  68   1        {
  69   2        COL =0xFF;
  70   2          do
  71   2          {
  72   3            ROW =0x00;
  73   3            col=COL;
  74   3            col &= 0x0F;
  75   3          }while(col != 0x0F);
  76   2          
  77   2          do
  78   2          {
  79   3       
  80   3          delay(1);
  81   3          col =COL;
  82   3          col &= 0x0F;
  83   3        
  84   3        }while(col == 0x0F);
  85   2          
  86   2        while(1)
  87   2        {   
  88   3          ROW = 0x0FE;
  89   3          col =COL;
  90   3          col &=0x0F;
  91   3      
  92   3          if(col != 0x0F)
  93   3            
  94   3          {
  95   4            row = 0;
  96   4            break;
  97   4          }
  98   3          
  99   3          ROW = 0xFD;
 100   3          col = COL;
 101   3          col &= 0x0F;
 102   3         
 103   3          if(col != 0x0F)
 104   3            
 105   3          {
 106   4            row =1;
 107   4            break;
 108   4          
 109   4          }
 110   3          
 111   3           ROW = 0xFB;
 112   3           col = COL;
 113   3           col &= 0x0F;
 114   3           
 115   3          if(col != 0x0F)
 116   3          {
C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 3   

 117   4            row = 2;
 118   4            break;
 119   4          }
 120   3          
 121   3          ROW = 0xF7;
 122   3          col = COL;
 123   3          col &= 0x0F;
 124   3          
 125   3          row =3;
 126   3          
 127   3          break;
 128   3        }
 129   2        
 130   2        if(col == 0x0E)
 131   2        {
 132   3          acc = calculator[row][0];
 133   3        }
 134   2        else if (col == 0x0D)
 135   2        {
 136   3          
 137   3          acc = calculator[row][1];
 138   3        }   
 139   2        else if(col == 0x0B)
 140   2        {
 141   3          acc = calculator[row][2];
 142   3        }
 143   2        else  
 144   2        {
 145   3       
 146   3          acc = calculator[row][3];
 147   3        }
 148   2          
 149   2        if(acc==0x63)
 150   2        {
 151   3           command_set();
 152   3          count=0;
 153   3          z=0;
 154   3          continue;
 155   3        }
 156   2        
 157   2         display = acc;
 158   2          DISPLAY();
 159   2        
 160   2        
 161   2        if(acc==0x3D)
 162   2        {
 163   3          perform();
 164   3       
 165   3        }
 166   2        
 167   2        
 168   2        if(acc==0x2B)
 169   2        {
 170   3            z=1;
 171   3           sign=acc;
 172   3          continue;
 173   3        }
 174   2         else if (acc==0x2D)
 175   2         {
 176   3            z=1;
 177   3            sign =acc;
 178   3           continue;
C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 4   

 179   3         }
 180   2         
 181   2         else if(acc==0x2A)
 182   2         {
 183   3            z=1;
 184   3            sign=acc;
 185   3           continue;
 186   3         
 187   3         }
 188   2         else if(acc==0x2F)
 189   2         {
 190   3            z=1;
 191   3            sign=acc;
 192   3           continue;
 193   3         
 194   3         }
 195   2         
 196   2          if(acc=='0' || acc == '1' || acc == '2' || acc == '3' || acc == '4'
 197   2             || acc == '5' || acc == '6' || acc == '7' || acc == '8' || acc == '9' ) 
 198   2            { 
 199   3                     count++;
 200   3             }
 201   2        
 202   2             
 203   2                 if(count==1 && z==0)
 204   2      
 205   2                 {
 206   3                      conv1();
 207   3                   p=0x0F;
 208   3                                
 209   3                 }
 210   2      
 211   2                 else if(count==2 && z== 0)
 212   2      
 213   2                  {
 214   3                    p = acc & 0x0F;
 215   3                    two_digit();              
 216   3                  }
 217   2                  else if((count==2 && z==1) || (count==3 && z==1))
 218   2      
 219   2                  {
 220   3                     conv2();             
 221   3                  }
 222   2                  else if((count==3 && z==1) || (count==4 && z==1))
 223   2                  {
 224   3                    c = acc & 0x0F;
 225   3                    two_digit1();             
 226   3                  } 
 227   2      }
 228   1        
 229   1      }
 230          
 231          void conv1()
 232          {
 233   1          x = acc & 0x0F;
 234   1          q=x;    
 235   1      }
 236          
 237          void two_digit()
 238          {
 239   1            x=x*10;
 240   1            q=x+p;
C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 5   

 241   1      }
 242          
 243          void conv2()
 244          { 
 245   1        y = acc & 0x0F;
 246   1         b=y; 
 247   1      }
 248          
 249          
 250          void two_digit1()
 251          {
 252   1            y=y*10;
 253   1            b=y+c;
 254   1      }
 255          
 256           
 257          void perform()
 258          {
 259   1      
 260   1        if (sign == 0x2B)
 261   1        {
 262   2          add();
 263   2        }
 264   1        else if (sign == 0x2D)
 265   1        { 
 266   2           subb();
 267   2        }
 268   1        
 269   1          else if (sign == 0x2A)
 270   1        {
 271   2           mul();
 272   2        }
 273   1        
 274   1          else if (sign == 0x2F)
 275   1        {
 276   2           div();
 277   2        }
 278   1      }
 279          
 280          
 281          void add()
 282          { 
 283   1         
 284   1        result = q+b;
 285   1        anticonv();
 286   1      }
 287          
 288          void subb()
 289          {
 290   1       
 291   1         result = q-b;
 292   1         anticonv();
 293   1      }
 294          
 295          void mul()
 296          {
 297   1       
 298   1        result = q*b;
 299   1        anticonv();
 300   1      }
 301          
 302          void div()
C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 6   

 303          {
 304   1       
 305   1       result=q/y;
 306   1        anticonv();
 307   1      }
 308          
 309          void anticonv()
 310          {
 311   1         unsigned char d1,d2,d3,d4;
 312   1         
 313   1        d1=result / 10;
 314   1        d2=result % 10;
 315   1        d3=d1 / 10;
 316   1        d4=d1 % 10;
 317   1        
 318   1        d3 = d3 | 0x30;
 319   1        display=d3;
 320   1        DISPLAY();
 321   1        
 322   1        d4 = d4 | 0x30;
 323   1        display=d4;
 324   1        DISPLAY();
 325   1        
 326   1      
 327   1        d2 = d2 | 0X30;
 328   1        display=d2;
 329   1        DISPLAY();
 330   1        
 331   1      }
 332          
 333          
 334          void command_set()
 335          {
 336   1      
 337   1        display = 0x38;
 338   1          command();
 339   1      
 340   1           display = 0x01;
 341   1          command();
 342   1          
 343   1           display = 0x0C;
 344   1           command();
 345   1           
 346   1            
 347   1           display = 0x06;
 348   1           command();
 349   1           
 350   1       
 351   1           display = 0x80;
 352   1           command();
 353   1      
 354   1      }
 355          
 356          void delay(unsigned int value)
 357          {
 358   1        unsigned int g,h;
 359   1        for(g=0;g<1275;g++)
 360   1        {
 361   2          for(h=0;h<value;h++)
 362   2          {}
 363   2        }
 364   1      }
C51 COMPILER V9.60.0.0   C_INTERFACING                                                     09/27/2020 17:15:03 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    683    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
