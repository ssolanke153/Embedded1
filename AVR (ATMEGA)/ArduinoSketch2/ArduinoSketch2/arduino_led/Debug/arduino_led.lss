
arduino_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000142  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000ee  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000142  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000174  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007fd  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068b  00000000  00000000  000009e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000310  00000000  00000000  00001074  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001384  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000459  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000028  00000000  00000000  00001831  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  78:	0c 94 75 00 	jmp	0xea	; 0xea <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z7com_comv>:

}

void com_com()
{
  PORTB = PORTB & ~(1<<0);
  80:	28 98       	cbi	0x05, 0	; 5
  PORTB = PORTB & ~(1<<1);
  82:	29 98       	cbi	0x05, 1	; 5
  PORTB = PORTB | (1<<2);
  84:	2a 9a       	sbi	0x05, 2	; 5
  PORTB = PORTB & ~(1<<2);
  86:	2a 98       	cbi	0x05, 2	; 5
  88:	08 95       	ret

0000008a <_Z7commandv>:


void command()
{
  
  PORTD = 0x38;
  8a:	88 e3       	ldi	r24, 0x38	; 56
  8c:	8b b9       	out	0x0b, r24	; 11
  com_com();
  8e:	0e 94 40 00 	call	0x80	; 0x80 <_Z7com_comv>
  
  PORTD = 0x01;
  92:	81 e0       	ldi	r24, 0x01	; 1
  94:	8b b9       	out	0x0b, r24	; 11
  com_com();
  96:	0e 94 40 00 	call	0x80	; 0x80 <_Z7com_comv>
  
  PORTD = 0x06;
  9a:	86 e0       	ldi	r24, 0x06	; 6
  9c:	8b b9       	out	0x0b, r24	; 11
  com_com();
  9e:	0e 94 40 00 	call	0x80	; 0x80 <_Z7com_comv>
  
  PORTD = 0x0C;
  a2:	8c e0       	ldi	r24, 0x0C	; 12
  a4:	8b b9       	out	0x0b, r24	; 11
  com_com();
  a6:	0c 94 40 00 	jmp	0x80	; 0x80 <_Z7com_comv>

000000aa <_Z8com_datav>:
  
}

void com_data()
{
  PORTB = PORTB | (1<<0);
  aa:	28 9a       	sbi	0x05, 0	; 5
  PORTB = PORTB & ~(1<<1);
  ac:	29 98       	cbi	0x05, 1	; 5
  PORTB = PORTB | (1<<2);
  ae:	2a 9a       	sbi	0x05, 2	; 5
  PORTB = PORTB & ~(1<<2);
  b0:	2a 98       	cbi	0x05, 2	; 5
  b2:	08 95       	ret

000000b4 <main>:
}

int main()
 {
  
   DDRD = 0xFF;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	8a b9       	out	0x0a, r24	; 10
   DDRB = 0xFF;
  b8:	84 b9       	out	0x04, r24	; 4
   DDRC = 0x00;
  ba:	17 b8       	out	0x07, r1	; 7
  
   command();
  bc:	0e 94 45 00 	call	0x8a	; 0x8a <_Z7commandv>
   ADCSRA = 0x87;
  c0:	87 e8       	ldi	r24, 0x87	; 135
  c2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
   ADMUX = 0xE0;
  c6:	80 ee       	ldi	r24, 0xE0	; 224
  c8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  
  while(1)
  {
    ADCSRA |=(1<<ADSC);
  cc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  d0:	80 64       	ori	r24, 0x40	; 64
  d2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    while((ADCSRA & (1<<ADIF))==0)
  d6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  da:	84 fd       	sbrc	r24, 4
  dc:	f7 cf       	rjmp	.-18     	; 0xcc <main+0x18>
    {
     PORTD = ADCH;
  de:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
  e2:	8b b9       	out	0x0b, r24	; 11
      com_data();
  e4:	0e 94 55 00 	call	0xaa	; 0xaa <_Z8com_datav>
   ADMUX = 0xE0;
  
  while(1)
  {
    ADCSRA |=(1<<ADSC);
    while((ADCSRA & (1<<ADIF))==0)
  e8:	f6 cf       	rjmp	.-20     	; 0xd6 <main+0x22>

000000ea <_exit>:
  ea:	f8 94       	cli

000000ec <__stop_program>:
  ec:	ff cf       	rjmp	.-2      	; 0xec <__stop_program>
