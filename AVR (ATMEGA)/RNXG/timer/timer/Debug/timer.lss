
timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000098  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000011c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000058d  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000051a  00000000  00000000  0000070d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000205  00000000  00000000  00000c27  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000e2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002df  00000000  00000000  00000e60  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  0000113f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 41 00 	call	0x82	; 0x82 <main>
  64:	0c 94 4a 00 	jmp	0x94	; 0x94 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <delay>:
	return 0;
}

void delay()
{
   TCNT0 = 0;
  6c:	12 be       	out	0x32, r1	; 50
   TCCR0 = 0x02;
  6e:	82 e0       	ldi	r24, 0x02	; 2
  70:	83 bf       	out	0x33, r24	; 51

   while((TIFR &(1<<TOV0))==1)
  72:	03 c0       	rjmp	.+6      	; 0x7a <delay+0xe>
   {
	   TCCR0 = 0x00;
  74:	13 be       	out	0x33, r1	; 51
	   TIFR = 0x01;
  76:	81 e0       	ldi	r24, 0x01	; 1
  78:	88 bf       	out	0x38, r24	; 56
void delay()
{
   TCNT0 = 0;
   TCCR0 = 0x02;

   while((TIFR &(1<<TOV0))==1)
  7a:	08 b6       	in	r0, 0x38	; 56
  7c:	00 fc       	sbrc	r0, 0
  7e:	fa cf       	rjmp	.-12     	; 0x74 <delay+0x8>
   {
	   TCCR0 = 0x00;
	   TIFR = 0x01;
   }
}
  80:	08 95       	ret

00000082 <main>:
void delay();

int main(void)
{

	DDRB=0xFF;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	87 bb       	out	0x17, r24	; 23

    while (1)
    {
        delay();
  86:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
		PORTB = PORTB ^ 0x01;
  8a:	98 b3       	in	r25, 0x18	; 24
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	89 27       	eor	r24, r25
  90:	88 bb       	out	0x18, r24	; 24
  92:	f9 cf       	rjmp	.-14     	; 0x86 <main+0x4>

00000094 <_exit>:
  94:	f8 94       	cli

00000096 <__stop_program>:
  96:	ff cf       	rjmp	.-2      	; 0x96 <__stop_program>
